

================================================================
== Vivado HLS Report for 'fibonacci'
================================================================
* Date:           Tue Nov 21 09:20:49 2023

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        fibonacci_cp
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 4.242 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1  |        ?|        ?|         1|          -|          -|     ?|    no    |
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 4.24>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %n) nounwind, !map !7"   --->   Operation 3 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %result) nounwind, !map !13"   --->   Operation 4 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([10 x i8]* @fibonacci_str) nounwind"   --->   Operation 5 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%n_read = call i32 @_ssdm_op_Read.ap_none.i32(i32 %n) nounwind" [fibonacci_cp/fibonacci.cpp:6]   --->   Operation 6 'read' 'n_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [13 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [fibonacci_cp/fibonacci.cpp:7]   --->   Operation 7 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %n, [8 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [fibonacci_cp/fibonacci.cpp:7]   --->   Operation 8 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %n, [10 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [fibonacci_cp/fibonacci.cpp:7]   --->   Operation 9 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %result, [10 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [fibonacci_cp/fibonacci.cpp:8]   --->   Operation 10 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (2.47ns)   --->   "%icmp_ln14 = icmp eq i32 %n_read, 1" [fibonacci_cp/fibonacci.cpp:14]   --->   Operation 11 'icmp' 'icmp_ln14' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 12 [1/1] (1.76ns)   --->   "br i1 %icmp_ln14, label %.loopexit, label %.preheader.preheader" [fibonacci_cp/fibonacci.cpp:14]   --->   Operation 12 'br' <Predicate = true> <Delay = 1.76>
ST_1 : Operation 13 [1/1] (1.76ns)   --->   "br label %.preheader" [fibonacci_cp/fibonacci.cpp:16]   --->   Operation 13 'br' <Predicate = (!icmp_ln14)> <Delay = 1.76>

State 2 <SV = 1> <Delay = 2.76>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%a = phi i32 [ %tmp, %1 ], [ 1, %.preheader.preheader ]"   --->   Operation 14 'phi' 'a' <Predicate = (!icmp_ln14)> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%a_0 = phi i32 [ %a, %1 ], [ 0, %.preheader.preheader ]"   --->   Operation 15 'phi' 'a_0' <Predicate = (!icmp_ln14)> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%tmp_1 = phi i32 [ %tmp, %1 ], [ 0, %.preheader.preheader ]"   --->   Operation 16 'phi' 'tmp_1' <Predicate = (!icmp_ln14)> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%i_0 = phi i32 [ %i, %1 ], [ 2, %.preheader.preheader ]"   --->   Operation 17 'phi' 'i_0' <Predicate = (!icmp_ln14)> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (2.47ns)   --->   "%icmp_ln16 = icmp sgt i32 %i_0, %n_read" [fibonacci_cp/fibonacci.cpp:16]   --->   Operation 18 'icmp' 'icmp_ln16' <Predicate = (!icmp_ln14)> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "br i1 %icmp_ln16, label %.loopexit.loopexit, label %1" [fibonacci_cp/fibonacci.cpp:16]   --->   Operation 19 'br' <Predicate = (!icmp_ln14)> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (2.55ns)   --->   "%tmp = add nsw i32 %a_0, %a" [fibonacci_cp/fibonacci.cpp:17]   --->   Operation 20 'add' 'tmp' <Predicate = (!icmp_ln14 & !icmp_ln16)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 21 [1/1] (2.55ns)   --->   "%i = add nsw i32 %i_0, 1" [fibonacci_cp/fibonacci.cpp:16]   --->   Operation 21 'add' 'i' <Predicate = (!icmp_ln14 & !icmp_ln16)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "br label %.preheader" [fibonacci_cp/fibonacci.cpp:16]   --->   Operation 22 'br' <Predicate = (!icmp_ln14 & !icmp_ln16)> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (1.76ns)   --->   "br label %.loopexit"   --->   Operation 23 'br' <Predicate = (!icmp_ln14 & icmp_ln16)> <Delay = 1.76>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%tmp_2 = phi i32 [ 1, %0 ], [ %tmp_1, %.loopexit.loopexit ]" [fibonacci_cp/fibonacci.cpp:17]   --->   Operation 24 'phi' 'tmp_2' <Predicate = (icmp_ln16) | (icmp_ln14)> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (1.00ns)   --->   "call void @_ssdm_op_Write.s_axilite.i32P(i32* %result, i32 %tmp_2) nounwind" [fibonacci_cp/fibonacci.cpp:22]   --->   Operation 25 'write' <Predicate = (icmp_ln16) | (icmp_ln14)> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "ret void" [fibonacci_cp/fibonacci.cpp:23]   --->   Operation 26 'ret' <Predicate = (icmp_ln16) | (icmp_ln14)> <Delay = 0.00>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 0
- Is top level: 1
Port [ Return ] is wired: 1; IO mode=ap_ctrl_none:ce=0
Port [ n]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ result]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=0; pingpong=0; private_global=0; IO mode=ap_vld:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
specbitsmap_ln0   (specbitsmap  ) [ 000]
specbitsmap_ln0   (specbitsmap  ) [ 000]
spectopmodule_ln0 (spectopmodule) [ 000]
n_read            (read         ) [ 001]
specinterface_ln7 (specinterface) [ 000]
specinterface_ln7 (specinterface) [ 000]
specinterface_ln7 (specinterface) [ 000]
specinterface_ln8 (specinterface) [ 000]
icmp_ln14         (icmp         ) [ 011]
br_ln14           (br           ) [ 011]
br_ln16           (br           ) [ 011]
a                 (phi          ) [ 011]
a_0               (phi          ) [ 001]
tmp_1             (phi          ) [ 001]
i_0               (phi          ) [ 001]
icmp_ln16         (icmp         ) [ 001]
br_ln16           (br           ) [ 000]
tmp               (add          ) [ 011]
i                 (add          ) [ 011]
br_ln16           (br           ) [ 011]
br_ln0            (br           ) [ 000]
tmp_2             (phi          ) [ 001]
write_ln22        (write        ) [ 000]
ret_ln23          (ret          ) [ 000]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="n">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="n"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="result">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="result"/></StgValue>
</bind>
</comp>

<comp id="4" class="1001" name="const_4">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecBitsMap"/></StgValue>
</bind>
</comp>

<comp id="6" class="1001" name="const_6">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecTopModule"/></StgValue>
</bind>
</comp>

<comp id="8" class="1001" name="const_8">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="fibonacci_str"/></StgValue>
</bind>
</comp>

<comp id="10" class="1001" name="const_10">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_none.i32"/></StgValue>
</bind>
</comp>

<comp id="12" class="1001" name="const_12">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecInterface"/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="1"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str"/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str1"/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str2"/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str3"/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="1"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Write.s_axilite.i32P"/></StgValue>
</bind>
</comp>

<comp id="30" class="1004" name="n_read_read_fu_30">
<pin_list>
<pin id="31" dir="0" index="0" bw="32" slack="0"/>
<pin id="32" dir="0" index="1" bw="32" slack="0"/>
<pin id="33" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="n_read/1 "/>
</bind>
</comp>

<comp id="36" class="1004" name="write_ln22_write_fu_36">
<pin_list>
<pin id="37" dir="0" index="0" bw="0" slack="0"/>
<pin id="38" dir="0" index="1" bw="32" slack="0"/>
<pin id="39" dir="0" index="2" bw="32" slack="0"/>
<pin id="40" dir="1" index="3" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="write_ln22/2 "/>
</bind>
</comp>

<comp id="43" class="1005" name="a_reg_43">
<pin_list>
<pin id="44" dir="0" index="0" bw="32" slack="0"/>
<pin id="45" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opset="a (phireg) "/>
</bind>
</comp>

<comp id="47" class="1004" name="a_phi_fu_47">
<pin_list>
<pin id="48" dir="0" index="0" bw="32" slack="0"/>
<pin id="49" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="50" dir="0" index="2" bw="1" slack="1"/>
<pin id="51" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="52" dir="1" index="4" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="a/2 "/>
</bind>
</comp>

<comp id="55" class="1005" name="a_0_reg_55">
<pin_list>
<pin id="56" dir="0" index="0" bw="32" slack="1"/>
<pin id="57" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="a_0 (phireg) "/>
</bind>
</comp>

<comp id="59" class="1004" name="a_0_phi_fu_59">
<pin_list>
<pin id="60" dir="0" index="0" bw="32" slack="0"/>
<pin id="61" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="62" dir="0" index="2" bw="1" slack="1"/>
<pin id="63" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="64" dir="1" index="4" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="a_0/2 "/>
</bind>
</comp>

<comp id="67" class="1005" name="tmp_1_reg_67">
<pin_list>
<pin id="68" dir="0" index="0" bw="32" slack="1"/>
<pin id="69" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="tmp_1 (phireg) "/>
</bind>
</comp>

<comp id="71" class="1004" name="tmp_1_phi_fu_71">
<pin_list>
<pin id="72" dir="0" index="0" bw="32" slack="0"/>
<pin id="73" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="74" dir="0" index="2" bw="1" slack="1"/>
<pin id="75" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="76" dir="1" index="4" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="tmp_1/2 "/>
</bind>
</comp>

<comp id="78" class="1005" name="i_0_reg_78">
<pin_list>
<pin id="79" dir="0" index="0" bw="32" slack="1"/>
<pin id="80" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="i_0 (phireg) "/>
</bind>
</comp>

<comp id="82" class="1004" name="i_0_phi_fu_82">
<pin_list>
<pin id="83" dir="0" index="0" bw="32" slack="0"/>
<pin id="84" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="85" dir="0" index="2" bw="3" slack="1"/>
<pin id="86" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="87" dir="1" index="4" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="i_0/2 "/>
</bind>
</comp>

<comp id="89" class="1005" name="tmp_2_reg_89">
<pin_list>
<pin id="90" dir="0" index="0" bw="32" slack="1"/>
<pin id="91" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="tmp_2 (phireg) "/>
</bind>
</comp>

<comp id="93" class="1004" name="tmp_2_phi_fu_93">
<pin_list>
<pin id="94" dir="0" index="0" bw="1" slack="1"/>
<pin id="95" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="96" dir="0" index="2" bw="32" slack="0"/>
<pin id="97" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="98" dir="1" index="4" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="tmp_2/2 "/>
</bind>
</comp>

<comp id="102" class="1004" name="icmp_ln14_fu_102">
<pin_list>
<pin id="103" dir="0" index="0" bw="32" slack="0"/>
<pin id="104" dir="0" index="1" bw="1" slack="0"/>
<pin id="105" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln14/1 "/>
</bind>
</comp>

<comp id="108" class="1004" name="icmp_ln16_fu_108">
<pin_list>
<pin id="109" dir="0" index="0" bw="32" slack="0"/>
<pin id="110" dir="0" index="1" bw="32" slack="1"/>
<pin id="111" dir="1" index="2" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln16/2 "/>
</bind>
</comp>

<comp id="113" class="1004" name="tmp_fu_113">
<pin_list>
<pin id="114" dir="0" index="0" bw="32" slack="0"/>
<pin id="115" dir="0" index="1" bw="32" slack="0"/>
<pin id="116" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="tmp/2 "/>
</bind>
</comp>

<comp id="119" class="1004" name="i_fu_119">
<pin_list>
<pin id="120" dir="0" index="0" bw="32" slack="0"/>
<pin id="121" dir="0" index="1" bw="1" slack="0"/>
<pin id="122" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="i/2 "/>
</bind>
</comp>

<comp id="125" class="1005" name="n_read_reg_125">
<pin_list>
<pin id="126" dir="0" index="0" bw="32" slack="1"/>
<pin id="127" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="n_read "/>
</bind>
</comp>

<comp id="130" class="1005" name="icmp_ln14_reg_130">
<pin_list>
<pin id="131" dir="0" index="0" bw="1" slack="1"/>
<pin id="132" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="icmp_ln14 "/>
</bind>
</comp>

<comp id="137" class="1005" name="tmp_reg_137">
<pin_list>
<pin id="138" dir="0" index="0" bw="32" slack="0"/>
<pin id="139" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opset="tmp "/>
</bind>
</comp>

<comp id="143" class="1005" name="i_reg_143">
<pin_list>
<pin id="144" dir="0" index="0" bw="32" slack="0"/>
<pin id="145" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opset="i "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="34"><net_src comp="10" pin="0"/><net_sink comp="30" pin=0"/></net>

<net id="35"><net_src comp="0" pin="0"/><net_sink comp="30" pin=1"/></net>

<net id="41"><net_src comp="28" pin="0"/><net_sink comp="36" pin=0"/></net>

<net id="42"><net_src comp="2" pin="0"/><net_sink comp="36" pin=1"/></net>

<net id="46"><net_src comp="24" pin="0"/><net_sink comp="43" pin=0"/></net>

<net id="53"><net_src comp="43" pin="1"/><net_sink comp="47" pin=2"/></net>

<net id="54"><net_src comp="47" pin="4"/><net_sink comp="43" pin=0"/></net>

<net id="58"><net_src comp="14" pin="0"/><net_sink comp="55" pin=0"/></net>

<net id="65"><net_src comp="43" pin="1"/><net_sink comp="59" pin=0"/></net>

<net id="66"><net_src comp="55" pin="1"/><net_sink comp="59" pin=2"/></net>

<net id="70"><net_src comp="14" pin="0"/><net_sink comp="67" pin=0"/></net>

<net id="77"><net_src comp="67" pin="1"/><net_sink comp="71" pin=2"/></net>

<net id="81"><net_src comp="26" pin="0"/><net_sink comp="78" pin=0"/></net>

<net id="88"><net_src comp="78" pin="1"/><net_sink comp="82" pin=2"/></net>

<net id="92"><net_src comp="24" pin="0"/><net_sink comp="89" pin=0"/></net>

<net id="99"><net_src comp="89" pin="1"/><net_sink comp="93" pin=0"/></net>

<net id="100"><net_src comp="71" pin="4"/><net_sink comp="93" pin=2"/></net>

<net id="101"><net_src comp="93" pin="4"/><net_sink comp="36" pin=2"/></net>

<net id="106"><net_src comp="30" pin="2"/><net_sink comp="102" pin=0"/></net>

<net id="107"><net_src comp="24" pin="0"/><net_sink comp="102" pin=1"/></net>

<net id="112"><net_src comp="82" pin="4"/><net_sink comp="108" pin=0"/></net>

<net id="117"><net_src comp="59" pin="4"/><net_sink comp="113" pin=0"/></net>

<net id="118"><net_src comp="47" pin="4"/><net_sink comp="113" pin=1"/></net>

<net id="123"><net_src comp="82" pin="4"/><net_sink comp="119" pin=0"/></net>

<net id="124"><net_src comp="24" pin="0"/><net_sink comp="119" pin=1"/></net>

<net id="128"><net_src comp="30" pin="2"/><net_sink comp="125" pin=0"/></net>

<net id="129"><net_src comp="125" pin="1"/><net_sink comp="108" pin=1"/></net>

<net id="133"><net_src comp="102" pin="2"/><net_sink comp="130" pin=0"/></net>

<net id="140"><net_src comp="113" pin="2"/><net_sink comp="137" pin=0"/></net>

<net id="141"><net_src comp="137" pin="1"/><net_sink comp="47" pin=0"/></net>

<net id="142"><net_src comp="137" pin="1"/><net_sink comp="71" pin=0"/></net>

<net id="146"><net_src comp="119" pin="2"/><net_sink comp="143" pin=0"/></net>

<net id="147"><net_src comp="143" pin="1"/><net_sink comp="82" pin=0"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
	Port: result | {2 }
 - Input state : 
	Port: fibonacci : n | {1 }
  - Chain level:
	State 1
		br_ln14 : 1
	State 2
		icmp_ln16 : 1
		br_ln16 : 2
		tmp : 1
		i : 1
		tmp_2 : 1
		write_ln22 : 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|------------------------|---------|---------|
| Operation|     Functional Unit    |    FF   |   LUT   |
|----------|------------------------|---------|---------|
|    add   |       tmp_fu_113       |    0    |    39   |
|          |        i_fu_119        |    0    |    39   |
|----------|------------------------|---------|---------|
|   icmp   |    icmp_ln14_fu_102    |    0    |    18   |
|          |    icmp_ln16_fu_108    |    0    |    18   |
|----------|------------------------|---------|---------|
|   read   |    n_read_read_fu_30   |    0    |    0    |
|----------|------------------------|---------|---------|
|   write  | write_ln22_write_fu_36 |    0    |    0    |
|----------|------------------------|---------|---------|
|   Total  |                        |    0    |   114   |
|----------|------------------------|---------|---------|

Memories:
N/A

* Register list:
+-----------------+--------+
|                 |   FF   |
+-----------------+--------+
|    a_0_reg_55   |   32   |
|     a_reg_43    |   32   |
|    i_0_reg_78   |   32   |
|    i_reg_143    |   32   |
|icmp_ln14_reg_130|    1   |
|  n_read_reg_125 |   32   |
|   tmp_1_reg_67  |   32   |
|   tmp_2_reg_89  |   32   |
|   tmp_reg_137   |   32   |
+-----------------+--------+
|      Total      |   257  |
+-----------------+--------+

* Multiplexer (MUX) list: 
|----------|------|------|------|--------||---------||---------|
|   Comp   |  Pin | Size |  BW  | S x BW ||  Delay  ||   LUT   |
|----------|------|------|------|--------||---------||---------|
| a_reg_43 |  p0  |   2  |  32  |   64   ||    9    |
|----------|------|------|------|--------||---------||---------|
|   Total  |      |      |      |   64   ||  1.769  ||    9    |
|----------|------|------|------|--------||---------||---------|



* Summary:
+-----------+--------+--------+--------+
|           |  Delay |   FF   |   LUT  |
+-----------+--------+--------+--------+
|  Function |    -   |    0   |   114  |
|   Memory  |    -   |    -   |    -   |
|Multiplexer|    1   |    -   |    9   |
|  Register |    -   |   257  |    -   |
+-----------+--------+--------+--------+
|   Total   |    1   |   257  |   123  |
+-----------+--------+--------+--------+
